// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MiniElement /> render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MiniElement
    draggable={true}
    initialPosition={
      Object {
        "bottom": "0",
        "right": "0",
      }
    }
    miniElementStyle={
      Object {
        "height": "100px",
        "width": "100px",
      }
    }
    onChangeViewMode={[MockFunction]}
  >
    <div>
      Test
    </div>
  </MiniElement>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        Test
      </div>,
      "className": "noStyleDiv",
      "style": Object {
        "height": "fit-content",
        "width": "fit-content",
      },
    },
    "ref": [Function],
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test",
      },
      "ref": null,
      "rendered": "Test",
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          Test
        </div>,
        "className": "noStyleDiv",
        "style": Object {
          "height": "fit-content",
          "width": "fit-content",
        },
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Test",
        },
        "ref": null,
        "rendered": "Test",
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
